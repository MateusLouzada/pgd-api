CREATE TABLE [User] (
	ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
	Name NVARCHAR(255) NOT NULL,
	Email NVARCHAR(255) NOT NULL,
	Password NVARCHAR(255) NOT NULL,
	CONSTRAINT PK_User PRIMARY KEY (ID asc)
);

CREATE TABLE TaskType (
	ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
	Name NVARCHAR(50) NOT NULL,
	Description NVARCHAR(MAX) NOT NULL,
	CONSTRAINT PK_TaskType PRIMARY KEY (ID asc)
);

CREATE TABLE Task(
	ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
	Title NVARCHAR(255) NOT NULL,
	Description NVARCHAR(MAX) NULL,
	AssignedToUserID UNIQUEIDENTIFIER NULL,
	CurrentStageID UNIQUEIDENTIFIER NULL,
	TaskTypeID UNIQUEIDENTIFIER NOT NULL,
	ProjectID UNIQUEIDENTIFIER NULL,
	CreationDate DATETIME NULL,
	FinishDate DATETIME NULL,
	CONSTRAINT PK_Task PRIMARY KEY (ID asc)
);

CREATE TABLE Comment(
	ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
	TaskID UNIQUEIDENTIFIER NOT NULL,
	UserID UNIQUEIDENTIFIER NOT NULL,
	Content NVARCHAR(MAX) NOT NULL,
	CONSTRAINT PK_Comment PRIMARY KEY (ID asc)
);

CREATE TABLE Stage (
	ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
	Name NVARCHAR(50) NOT NULL,
	Description NVARCHAR(MAX) NOT NULL,
	CONSTRAINT PK_Stage PRIMARY KEY (ID asc)
);

CREATE TABLE Project (
	ID UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
	Name NVARCHAR(255) NOT NULL,
	Description NVARCHAR(MAX) NULL,
	MainUserID UNIQUEIDENTIFIER NULL,
	CONSTRAINT PK_Project PRIMARY KEY (ID asc)
);

ALTER TABLE Task
ADD CONSTRAINT FK_Task_User
FOREIGN KEY (AssignedToUserID) REFERENCES [User](ID);

ALTER TABLE Task
ADD CONSTRAINT FK_Task_TaskType
FOREIGN KEY (TaskTypeID) REFERENCES TaskType(ID);

ALTER TABLE Task
ADD CONSTRAINT FK_Task_Stage
FOREIGN KEY (CurrentStageID) REFERENCES Stage(ID);

ALTER TABLE Task
ADD CONSTRAINT FK_Task_Project
FOREIGN KEY (ProjectID) REFERENCES Project(ID);

ALTER TABLE Comment
ADD CONSTRAINT FK_Comment_Task
FOREIGN KEY (TaskID) REFERENCES Task(ID);

ALTER TABLE Comment
ADD CONSTRAINT FK_Comment_User
FOREIGN KEY (UserID) REFERENCES [User](ID);

ALTER TABLE Project
ADD CONSTRAINT FK_Project_User
FOREIGN KEY (MainUserID) REFERENCES [User](ID);